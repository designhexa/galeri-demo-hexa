
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://svqjeqngyindshuxjurp.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InN2cWplcW5neWluZHNodXhqdXJwIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDQzNTcwMjgsImV4cCI6MjA1OTkzMzAyOH0.IAjaLkfO-wzYh9LzfF6tkYS2VPLHVkbewut2pu0Y67E";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    storage: localStorage,
    autoRefreshToken: true,
    persistSession: true,
    detectSessionInUrl: true
  }
});

// Add debug helper that logs all auth state changes with more detailed information
supabase.auth.onAuthStateChange((event, session) => {
  console.log("[Supabase Debug] Auth state changed:", event);
  if (session?.user) {
    console.log("[Supabase Debug] User ID:", session.user.id);
    console.log("[Supabase Debug] User email:", session.user.email);
    console.log("[Supabase Debug] User metadata:", session.user.user_metadata);
  } else {
    console.log("[Supabase Debug] No active session");
  }
});

// Additional debug function to check profile data
export const checkProfileData = async (userId: string) => {
  const { data, error } = await supabase
    .from('profiles')
    .select('*')
    .eq('id', userId)
    .single();
    
  if (error) {
    console.error("[Profile Debug] Error fetching profile:", error);
    return null;
  }
  
  console.log("[Profile Debug] Profile data:", data);
  return data;
};

// Helper function to get a public URL for a file in storage
export const getPublicUrl = (bucket: string, path: string): string => {
  const { data } = supabase.storage.from(bucket).getPublicUrl(path);
  return data.publicUrl;
};

// Helper function to upload a file to storage
export const uploadFile = async (
  bucket: string, 
  path: string, 
  file: File,
  onProgress?: (progress: number) => void
): Promise<{ url: string; path: string } | null> => {
  try {
    const { data, error } = await supabase.storage
      .from(bucket)
      .upload(path, file, {
        cacheControl: '3600',
        upsert: true,
        onUploadProgress: onProgress ? (progress) => {
          const percent = Math.round((progress.loaded / progress.total) * 100);
          onProgress(percent);
        } : undefined
      });

    if (error) {
      console.error('[Storage Debug] Upload error:', error);
      throw error;
    }

    if (!data) {
      throw new Error('Upload returned no data');
    }

    const url = getPublicUrl(bucket, data.path);
    console.log('[Storage Debug] File uploaded successfully:', { path: data.path, url });
    
    return { url, path: data.path };
  } catch (error) {
    console.error('[Storage Debug] Error in uploadFile:', error);
    return null;
  }
};

// Helper function to delete a file from storage
export const deleteFile = async (bucket: string, path: string): Promise<boolean> => {
  try {
    const { error } = await supabase.storage
      .from(bucket)
      .remove([path]);

    if (error) {
      console.error('[Storage Debug] Delete error:', error);
      throw error;
    }

    console.log('[Storage Debug] File deleted successfully:', path);
    return true;
  } catch (error) {
    console.error('[Storage Debug] Error in deleteFile:', error);
    return false;
  }
};
